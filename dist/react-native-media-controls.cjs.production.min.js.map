{"version":3,"file":"react-native-media-controls.cjs.production.min.js","sources":["../src/constants/playerStates.ts","../src/MediaControls.style.ts","../src/utils.ts","../src/Controls.tsx","../src/Slider.tsx","../src/MediaControls.tsx","../src/Toolbar.tsx"],"sourcesContent":["enum PLAYER_STATES {\n  PLAYING = 0,\n  PAUSED = 1,\n  ENDED = 2,\n}\n\nexport { PLAYER_STATES };\n","import { StyleSheet } from \"react-native\";\n\nconst containerBackgroundColor = \"rgba(45, 59, 62, 0.4)\";\nconst playButtonBorderColor = \"rgba(255,255,255,0.5)\";\nconst white = \"#fff\";\n\nexport default StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: containerBackgroundColor,\n    bottom: 0,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    left: 0,\n    paddingHorizontal: 20,\n    paddingVertical: 13,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n  controlsRow: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  fullScreenContainer: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    justifyContent: \"center\",\n    paddingLeft: 20,\n  },\n  playButton: {\n    alignItems: \"center\",\n    borderColor: playButtonBorderColor,\n    borderRadius: 3,\n    borderWidth: 1.5,\n    height: 50,\n    justifyContent: \"center\",\n    width: 50,\n  },\n  playIcon: {\n    height: 22,\n    resizeMode: \"contain\",\n    width: 22,\n  },\n  progressColumnContainer: {\n    flex: 1,\n  },\n  progressContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginBottom: -25,\n  },\n  progressSlider: {\n    alignSelf: \"stretch\",\n  },\n  replayIcon: {\n    height: 20,\n    resizeMode: \"stretch\",\n    width: 25,\n  },\n  thumb: {\n    backgroundColor: white,\n    borderRadius: 50,\n    borderWidth: 3,\n    height: 20,\n    width: 20,\n  },\n  timeRow: {\n    alignSelf: \"stretch\",\n  },\n  timerLabel: {\n    color: white,\n    fontSize: 12,\n  },\n  timerLabelsContainer: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: -7,\n  },\n  toolbar: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  toolbarRow: {\n    alignItems: \"flex-start\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n  },\n  track: {\n    borderRadius: 1,\n    height: 5,\n  },\n});\n","import { PLAYER_STATES } from \"./constants/playerStates\";\n\nexport const humanizeVideoDuration = (seconds: number) => {\n  const [begin, end] = seconds >= 3600 ? [11, 8] : [14, 5];\n  const date = new Date(0);\n\n  date.setSeconds(seconds);\n  return date.toISOString().substr(begin, end);\n};\n\nexport const noop = () => {};\n\nexport const getPlayerStateIcon = (playerState: PLAYER_STATES) => {\n  switch (playerState) {\n    case PLAYER_STATES.PAUSED:\n      return require(\"./assets/ic_play.png\");\n    case PLAYER_STATES.PLAYING:\n      return require(\"./assets/ic_pause.png\");\n    case PLAYER_STATES.ENDED:\n      return require(\"./assets/ic_replay.png\");\n    default:\n      return null;\n  }\n};\n","import React from \"react\";\nimport { TouchableOpacity, View, ActivityIndicator, Image } from \"react-native\";\nimport styles from \"./MediaControls.style\";\nimport { getPlayerStateIcon } from \"./utils\";\nimport { Props } from \"./MediaControls\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\n\ntype ControlsProps = Pick<\n  Props,\n  \"isLoading\" | \"mainColor\" | \"playerState\" | \"onReplay\"\n> & {\n  onPause: () => void;\n};\n\nconst Controls = (props: ControlsProps) => {\n  const { isLoading, mainColor, playerState, onReplay, onPause } = props;\n  const icon = getPlayerStateIcon(playerState);\n  const pressAction = playerState === PLAYER_STATES.ENDED ? onReplay : onPause;\n\n  const content = isLoading ? (\n    <ActivityIndicator size=\"large\" color=\"#FFF\" />\n  ) : (\n    <TouchableOpacity\n      style={[styles.playButton, { backgroundColor: mainColor }]}\n      onPress={pressAction}\n      accessibilityLabel={PLAYER_STATES.PAUSED ? \"Tap to Play\" : \"Tap to Pause\"}\n      accessibilityHint={\"Plays and Pauses the Video\"}\n    >\n      <Image source={icon} style={styles.playIcon} />\n    </TouchableOpacity>\n  );\n\n  return <View style={[styles.controlsRow]}>{content}</View>;\n};\n\nexport { Controls };\n","import React from \"react\";\nimport {\n  TouchableOpacity,\n  View,\n  Text,\n  Image,\n  ViewStyle,\n  Platform,\n} from \"react-native\";\nimport styles from \"./MediaControls.style\";\nimport { humanizeVideoDuration } from \"./utils\";\nimport { Props as MediaControlsProps } from \"./MediaControls\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\nimport RNSlider from \"@react-native-community/slider\";\n\nexport type CustomSliderStyle = {\n  containerStyle: ViewStyle;\n  trackStyle: ViewStyle;\n  thumbStyle: ViewStyle;\n};\n\ntype Props = Pick<\n  MediaControlsProps,\n  | \"progress\"\n  | \"duration\"\n  | \"mainColor\"\n  | \"onFullScreen\"\n  | \"playerState\"\n  | \"onSeek\"\n  | \"onSeeking\"\n> & {\n  onPause: () => void;\n  customSliderStyle?: CustomSliderStyle;\n  hideSeekbar?: boolean;\n};\n\nconst fullScreenImage = require(\"./assets/ic_fullscreen.png\");\n\nconst Slider = (props: Props) => {\n  const {\n    customSliderStyle,\n    duration,\n    mainColor,\n    onFullScreen,\n    onPause,\n    progress,\n    hideSeekbar,\n  } = props;\n\n  const containerStyle = customSliderStyle?.containerStyle || {};\n\n  const dragging = (value: number) => {\n    const { onSeeking, playerState } = props;\n    onSeeking(value);\n\n    if (playerState === PLAYER_STATES.PAUSED) {\n      return;\n    }\n\n    onPause();\n  };\n\n  const seekVideo = (value: number) => {\n    props.onSeek(value);\n    onPause();\n  };\n\n  return (\n    <View\n      style={[styles.controlsRow, styles.progressContainer, containerStyle]}\n    >\n      <View style={styles.progressColumnContainer}>\n        {!hideSeekbar && (\n          <View style={[styles.timerLabelsContainer]}>\n            <Text style={styles.timerLabel}>\n              {humanizeVideoDuration(progress)}\n            </Text>\n            <Text style={styles.timerLabel}>\n              {humanizeVideoDuration(duration)}\n            </Text>\n          </View>\n        )}\n        {!hideSeekbar && (\n          <RNSlider\n            style={[\n              styles.progressSlider,\n              { marginTop: Platform.OS == \"ios\" ? 4 : 10 },\n            ]}\n            onValueChange={dragging}\n            onSlidingComplete={seekVideo}\n            maximumValue={Math.floor(duration)}\n            thumbImage={\n              Platform.OS == \"ios\"\n                ? require(\"./assets/thumb.png\")\n                : require(\"./assets/thumb_android.png\")\n            }\n            value={Math.floor(progress)}\n            minimumTrackTintColor={mainColor}\n            maximumTrackTintColor={\"#AEB3B7\"}\n          />\n        )}\n      </View>\n      {Boolean(onFullScreen) && (\n        <TouchableOpacity\n          style={styles.fullScreenContainer}\n          onPress={onFullScreen}\n        >\n          <Image source={fullScreenImage} />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nexport { Slider };\n","import React, { useEffect, useCallback } from \"react\";\nimport {\n  View,\n  GestureResponderEvent,\n  ViewStyle,\n  ViewProps,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  withTiming,\n  withDelay,\n  runOnJS,\n  AnimatedProps,\n} from \"react-native-reanimated\";\nimport styles from \"./MediaControls.style\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\nimport { Controls } from \"./Controls\";\nimport { Slider, CustomSliderStyle } from \"./Slider\";\nimport { Toolbar } from \"./Toolbar\";\n\nexport type Props = {\n  children: React.ReactNode;\n  containerStyle?: ViewStyle;\n  duration: number;\n  fadeOutDelay?: number;\n  isFullScreen: boolean;\n  isLoading: boolean;\n  mainColor: string;\n  onFullScreen?: (event: GestureResponderEvent) => void;\n  onPaused: (playerState: PLAYER_STATES) => void;\n  onReplay: () => void;\n  onSeek: (value: number) => void;\n  onSeeking: (value: number) => void;\n  playerState: PLAYER_STATES;\n  progress: number;\n  showOnStart?: boolean;\n  showOnLoad?: boolean;\n  sliderStyle?: CustomSliderStyle;\n  toolbarStyle?: ViewStyle;\n  hideSeekbar?: boolean;};\n\nconst MediaControls = (props: Props) => {\n  const {\n    children,\n    containerStyle = {},\n    duration,\n    fadeOutDelay = 5000,\n    isLoading = false,\n    mainColor = \"rgba(12, 83, 175, 0.9)\",\n    onFullScreen,\n    onReplay: onReplayCallback,\n    onSeek,\n    onSeeking,\n    playerState,\n    progress,\n    showOnStart = true,\n    showOnLoad = false,\n    sliderStyle,\n    hideSeekbar = false,\n    toolbarStyle = {},\n  } = props;\n\n  const { initialOpacity } = (() => {\n    if (showOnStart) {\n      return {\n        initialOpacity: 1,\n      };\n    }\n\n    return {\n      initialOpacity: 0,\n    };\n  })();\n\n  const opacity = useSharedValue(initialOpacity);\n\n  // Define fadeOutControls with useCallback\n  const fadeOutControls = useCallback((delay = 0) => {\n    opacity.value = withDelay(\n      delay,\n      withTiming(\n        0,\n        {\n          duration: 300,\n        }\n      )\n    );\n  }, [opacity]);\n\n  // Define fadeInControls with useCallback\n  const fadeInControls = useCallback((loop = true) => {\n    opacity.value = withTiming(\n      1,\n      {\n        duration: 300,\n      },\n      () => {\n        if (loop) {\n          runOnJS(fadeOutControls)(fadeOutDelay); // Use runOnJS here\n        }\n      }\n    );\n  }, [opacity, fadeOutControls, fadeOutDelay]);\n\n  useEffect(() => {\n    fadeOutControls(fadeOutDelay);\n  }, [fadeOutControls, fadeOutDelay]);\n\n  useEffect(() => {\n    if (showOnLoad) {\n      console.log('badddddd',isLoading, showOnLoad)\n      if (isLoading) toggleControls();\n      if (!isLoading) toggleControls();\n    }\n  }, [isLoading, showOnLoad]);\n\n  useEffect(()=>{\n    console.log('opacity',opacity.value)\n  },[opacity.value])\n\n  const onReplay = () => {\n    fadeOutControls(fadeOutDelay);\n    onReplayCallback();\n  };\n\n  const cancelAnimation = () => {\n    opacity.value = withTiming(1, { duration: 0 });\n  };\n\n  const onPause = useCallback(() => {\n    const { playerState, onPaused } = props;\n    const { PLAYING, PAUSED, ENDED } = PLAYER_STATES;\n    switch (playerState) {\n      case PLAYING: {\n        cancelAnimation();\n        break;\n      }\n      case PAUSED: {\n        fadeOutControls(fadeOutDelay);\n        break;\n      }\n      case ENDED:\n        break;\n    }\n\n    const newPlayerState = playerState === PLAYING ? PAUSED : PLAYING;\n    return onPaused(newPlayerState);\n  }, [props, fadeOutControls, fadeOutDelay]);\n\n  const toggleControls = useCallback(() => {\n    console.log('pressed')\n    const currentOpacity = opacity.value;\n    if (currentOpacity === 1) {\n      fadeOutControls();\n    } else {\n      fadeInControls();\n    }\n  }, [opacity, fadeOutControls, fadeInControls]);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    opacity: opacity.value,\n  }));\n\n  return (\n    <TouchableWithoutFeedback style={{backgroundColor: 'red', height: '100%'}} onPress={toggleControls}>\n      {/* @ts-ignore: Suppressing TS2322 error */}\n      <Animated.View style={[styles.container,containerStyle,animatedStyle] as AnimatedProps<ViewProps>[\"style\"]}>\n          <View style={[styles.container, containerStyle]}>\n            <View\n              style={[\n                styles.controlsRow,\n                styles.toolbarRow,\n                toolbarStyle,\n              ]}\n            >\n              {children}\n            </View>\n            <Controls\n              onPause={onPause}\n              onReplay={onReplay}\n              isLoading={isLoading}\n              mainColor={mainColor}\n              playerState={playerState}\n            />\n            <Slider\n              progress={progress}\n              duration={duration}\n              mainColor={mainColor}\n              onFullScreen={onFullScreen}\n              playerState={playerState}\n              onSeek={onSeek}\n              onSeeking={onSeeking}\n              onPause={onPause}\n              customSliderStyle={sliderStyle}\n              hideSeekbar={hideSeekbar}\n            />\n          </View>\n      </Animated.View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nMediaControls.Toolbar = Toolbar;\n\nexport default MediaControls;","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Toolbar = ({ children }: Props) => <>{children}</>;\n\nexport { Toolbar };\n"],"names":["PLAYER_STATES","StyleSheet","create","container","alignItems","backgroundColor","bottom","flexDirection","justifyContent","left","paddingHorizontal","paddingVertical","position","right","top","controlsRow","alignSelf","flex","fullScreenContainer","paddingLeft","playButton","borderColor","borderRadius","borderWidth","height","width","playIcon","resizeMode","progressColumnContainer","progressContainer","marginBottom","progressSlider","replayIcon","thumb","timeRow","timerLabel","color","fontSize","timerLabelsContainer","toolbar","toolbarRow","track","humanizeVideoDuration","seconds","_ref","begin","end","date","Date","setSeconds","toISOString","substr","Controls","props","isLoading","mainColor","playerState","onReplay","onPause","icon","PAUSED","require","PLAYING","ENDED","getPlayerStateIcon","pressAction","content","React","ActivityIndicator","size","TouchableOpacity","style","styles","onPress","accessibilityLabel","accessibilityHint","Image","source","View","fullScreenImage","Slider","customSliderStyle","duration","onFullScreen","progress","hideSeekbar","containerStyle","Text","RNSlider","marginTop","Platform","OS","onValueChange","value","onSeeking","onSlidingComplete","onSeek","maximumValue","Math","floor","thumbImage","minimumTrackTintColor","maximumTrackTintColor","Boolean","MediaControls","children","_props$containerStyle","_props$fadeOutDelay","fadeOutDelay","_props$isLoading","_props$mainColor","onReplayCallback","_props$showOnStart","showOnStart","_props$showOnLoad","showOnLoad","sliderStyle","_props$hideSeekbar","_props$toolbarStyle","toolbarStyle","opacity","useSharedValue","initialOpacity","fadeOutControls","useCallback","delay","withDelay","withTiming","fadeInControls","loop","runOnJS","useEffect","console","log","toggleControls","onPaused","animatedStyle","useAnimatedStyle","TouchableWithoutFeedback","Animated","Toolbar"],"mappings":"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"}